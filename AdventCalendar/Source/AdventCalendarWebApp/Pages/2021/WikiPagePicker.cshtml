@page
@using AdventCalendarWebApp.Model;
@model AdventCalendarWebApp.Pages._2021.WikiPagePickerModel
@{
    ViewData["Title"] = $"Door {Model.Day}";
}
<p>Try to pick the correct Wikipedia article based on random words of its content.</p>
<a asp-page="/Index" class="btn btn-outline-secondary mb-2">Go back</a>
@if (Model.ValidationState == ValidationState.Correct)
{
    <div class="alert alert-success">
        Yes, that is correct.
    </div>
    <div class="alert alert-dark">
        The correct articles indeed is @(WikiPagePickerModel.OptionStrings[Model.Index][WikiPagePickerModel.CorrectOptions[Model.Index]]).
        It took you @Model.NumberOfGuesses guesses.
        You spend @Model.SolveDuration.ToString(@"hh\:mm\:ss") to solve this one.
    </div>
}
else if (Model.ValidationState == ValidationState.Incorrect)
{
    <div class="alert alert-danger">
        No, your answer is incorrect
    </div>
}
<p class="mt-3">Pick on of the following articles</p>
<div class="list-group">
    @for (int i = 0; i < WikiPagePickerModel.OptionStrings[Model.Index].Count; i++)
    {
        var answer = WikiPagePickerModel.OptionStrings[Model.Index][i];
        <a asp-page="WikiPagePicker"
           class="list-group-item list-group-item-action@(i==Model.Answer?" active":"")@(Model.ValidationState==ValidationState.Correct?" disabled":"")"
           asp-route-day="@Model.Day"
           asp-route-numberOfGuesses="@Model.NumberOfGuesses"
           asp-route-startOfGuessing="@Model.StartOfGuessing"
           asp-route-answer="@i">@answer</a>
    }
</div>
<p class="mt-3">based on the following words of its article.</p>
<div class="row">
    @for (int i = 0; i < WikiPagePickerModel.Words[Model.Index].Count; i++)
    {
        <div class="col-6 col-lg-4 text-center p-1">
            <h2>@WikiPagePickerModel.Words[Model.Index][i]</h2>
        </div>
    }
</div>